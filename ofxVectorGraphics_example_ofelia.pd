#N canvas 1341 132 543 306 10;
#X obj 16 15 cnv 15 500 270 empty empty empty 20 12 0 14 #f8fc00 #404040 0;
#X obj 41 25 cnv 15 450 250 empty empty ofxVectorGraphics 40 50 0 30 #00f8fc #f8fc00 0;
#X text 77 195 adapted from tim scaffidi https://github.com/timscaffidi/ofxVolumetrics/tree/master/ofxVolumetricsExample jonathan frank 2021;
#X obj 81 166 ofelia d -k \$0-ofxVectorGraphics;
#A __set if type(window) ~= "userdata" then \; window = ofWindow() \; end \; \; local a = ofelia \; local canvas = ofCanvas(this) \; local clock = ofClock(this \, "setup") \; local dataDir = canvas:getDir() \; local output = ofxVectorGraphics() \; \; function a.new() \; ofWindow.addListener("setup" \, this) \; ofWindow.addListener("update" \, this) \; ofWindow.addListener("draw" \, this) \; ofWindow.addListener("exit" \, this) \; window:setPosition(30 \, 100) \; window:setSize(800 \, 400) \; if ofWindow.exists then \; clock:delay(0) \; else \; window:create() \; end \; end \; \; function a.free() \; window:destroy() \; ofWindow.removeListener("setup" \, this) \; ofWindow.removeListener("update" \, this) \; ofWindow.removeListener("draw" \, this) \; ofWindow.removeListener("exit" \, this) \; end \; \; function a.setup() \; ofSetWindowTitle("Volumetrics") \; ofBackground(150 \, 230 \, 255 \, 255) \; ofSetDataPathRoot("") \; ofNoFill() \; end \; \; function a.update() \; end \; \; function a.draw() \; output:beginEPS("test.ps") \; output:setColor(0x000000) \; output:triangle(80 \, 110 \, 110 \, 50 \, 140 \, 110) \; output:disableCenterRect() \; output:rect(240 \, 50 \, 60 \, 60) \; output:enableCenterRect() \; output:rect(270 \, 80 \, 20 \, 20) \; output:circle(425 \, 80 \, 30) \; output:ellipse(570 \, 80 \, 40 \, 30) \; output:bezier(70 \, 270 \, 100 \, 200 \, 120 \, 260 \, 180 \, 270) \; output:curve(160 \, 100 \, 240 \, 270 \, 330 \, 240 \, 360 \, 500) \; output:arc(400 \, 270 \, 60 \, 0 \, -70) \; output:line(540 \, 220 \, 600 \, 270) \; output:beginShape() \; output:polyVertex(50 \, 10) \; output:polyVertex(50 \, 100) \; output:polyVertex(500 \, 100) \; output:endShape(true) \; output:endEPS() \; end \; \; function a.exit() \; end \;;
